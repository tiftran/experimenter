version: "3"

services:
  app:
    image: app:build
    env_file: .env
    stdin_open: true
    tty: true
    links:
      - db
      - redis
    volumes:
      - ./app:/app
      - static_volume:/app/experimenter/served/
      - node_modules_volume:/app/node_modules/
    command: bash -c "/app/bin/wait-for-it.sh db:5432 -- python /app/manage.py collectstatic --noinput;python /app/manage.py runserver 0:7001"
    networks:
      - private_nw

  yarn:
    image: app:build
    env_file: .env
    volumes:
      - ./app:/app
      - static_volume:/app/experimenter/served/
      - node_modules_volume:/app/node_modules/
    command: bash -c "yarn run watch"
    networks:
      - public_nw
    ports:
      - "33123:33123"

  worker:
    image: app:build
    env_file: .env
    links:
      - db
      - redis
      - normandy-app
    volumes:
      - ./app:/app
    command: bash -c "/app/bin/wait-for-it.sh db:5432 -- celery -A experimenter worker -l debug"
    networks:
      - private_nw
      - public_nw

  beat:
    image: app:build
    env_file: .env
    links:
      - db
      - redis
    volumes:
      - ./app:/app
    command: bash -c "/app/bin/wait-for-it.sh db:5432 -- celery -A experimenter beat --pidfile /celerybeat.pid -s /celerybeat-schedule -l debug"
    networks:
      - private_nw

  nginx:
    build: ./nginx
    env_file: .env
    links:
      - app
    ports:
      - "443:443"
    networks:
      - private_nw
      - public_nw
    volumes:
      - static_volume:/app/experimenter/served/

  db:
    restart: always
    image: postgres:9.6
    networks:
      - private_nw

  redis:
    image: redis
    networks:
      - private_nw
  
  delivery-console_app:
    build:
      context: ./delivery-console
      dockerfile: $PWD/delivery-console/Dockerfile
    command: bash -c "REACT_APP_EXPERIMENTER_API_ROOT_URL=https://localhost/api/ REACT_APP_NORMANDY_ADMIN_API_ROOT_URL=https://localhost:8000/api/ yarn start"
    links:
      - normandy-app
    ports:
      - "3000:3000"
    networks:
      - private_nw
      - public_nw

  normandy-app:
    build:
      context: ./normandy
      dockerfile: $PWD/normandy/Dockerfile.development
    command: bash -c "/app/bin/wait-for-it.sh normandy_db:5431; ./bin/download_geolite2.sh; python manage.py migrate; python manage.py update_actions; python manage.py initial_data; ./bin/runsslserver.sh 0.0.0.0:8000"
    links:
      - normandy_db
    environment:
      - DATABASE_URL=postgres://postgres:postgres@normandy_db/normandy
      - DJANGO_ALLOWED_HOSTS=normandy-app,localhost
    ports:
      - "8000:8000"
    networks:
      - private_nw
      - public_nw

  normandy_db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: normandy
    ports:
      - "5431:5432"
    networks:
      - private_nw

volumes:
  db_volume:
  static_volume:
  node_modules_volume:

networks:
  private_nw:
    internal: true
  public_nw:
